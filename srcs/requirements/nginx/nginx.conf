# listen 443 ssl;

# ssl_certificate = nginx.cert /etc/ bis hin zu nginx.cert

# ssl_certificate_key = nginx.key /etc/ bis hin zu nginx.key

# ssl_protocols TLSv1.2 TLSv1.3;

# standart port (80) wird auf port 443 weitergeleitet

# permission wurden schon gesetzt (per Terminal) (RUN chmod 600 /etc/ssl/private/nginx.key <- nicht mehr notwendig)



# 1. EVENTS BLOCK

events {
    worker_connections 1024;
}

# wie viele gleichzeitige Verbindgungen ein Worker-Thread akzeptieren darf

# 2. HTTP BLOCK
# set global parameters (Logging, MIME-Types, ...)?????

access_log /var/log/nginx/access.log;#??
error_log /var/log/nginx/error.log; #??

# 3. Server BLOCK
# Server fuer HTTPS (443)
# activate TLS
# allow only v1.2, 1.3
# include cert and key
# PHP-FMP proxy to WordPress container

add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always; # HSTS Header (HTTP Strict Transport Security) - zwingt Browser, nur über HTTPS zu kommunizieren

http {
    server {
        listen 443 ssl;
        server_name cbauer.42.fr; 

        # Certificates
        #ssl_certificate /etc/ssl/private/nginx.crt;
        #ssl_certificate_key /etc/ssl/private/nginx.key;
        ssl_certificate /etc/letsencrypt/nginx.crt;
        ssl_certificate_key /etc/letsencrypt/nginx.key;


        # Nur TLS v1.2 und v1.3 erlauben
        ssl_protocols TLSv1.2 TLSv1.3;

        # Security: starkeCipher-Suites
        ssl_prefer_server_ciphers on;

        # root zu Wordpress dateien ????
        root /var/www/html; # <- volume aus docker-compose.yml
        index index.php index.html; #?????

        location / {
            try_files $uri $uri/ /index.php?$args;
        }

        location ~ \.php$ {
            include fastcgi_params; ##????
            fastcgi_pass wordpress:9000; # Container-Name + Port aus docker-compose.yml <- habe ich noch nicht im docker-compose; muss exakt der Service-Name in der compose sein
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; ##?????
        }
    }

    server{
        listen 80;
        server_name cbauer.42.fr;
        return 301 https://$host$request_uri;
    }
}

#Optional: client_max_body_size, MIME-Typen, Performance-Settings (sendfile on; tcp_nopush on;) – aber fürs Projekt nicht zwingend.