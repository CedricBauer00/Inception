server {  # Öffnet einen neuen "Server-Block", in dem du eine virtuelle Website definierst (virtueller Host)
    listen 443 ssl;  # Sagt NGINX, dass dieser Server-Block auf Port 443 (HTTPS-Standardport) lauscht und SSL/TLS benutzt
    server_name login.42.fr;  # Definiert den Domain-Namen, für den dieser Server-Block zuständig ist (hier: dein Projekt-Domain login.42.fr)

    # Zertifikate
    ssl_certificate     /etc/ssl/private/nginx.crt;  # Pfad zum öffentlichen Zertifikat (CRT-Datei), das den Browsern die Authentizität des Servers bestätigt
    ssl_certificate_key /etc/ssl/private/nginx.key;  # Pfad zum privaten Schlüssel (KEY-Datei), der zusammen mit dem Zertifikat für die TLS-Verschlüsselung genutzt wird

    # Nur TLS 1.2 & 1.3 erlauben
    ssl_protocols TLSv1.2 TLSv1.3;  # Beschränkt die erlaubten Protokolle auf TLS Version 1.2 und 1.3 (ältere, unsichere Versionen wie 1.0/1.1 werden blockiert)

    # Sicherheit: starke Cipher-Suites
    ssl_prefer_server_ciphers on;  # Erzwingt, dass der Server (NGINX) entscheidet, welche Verschlüsselungsalgorithmen (Cipher Suites) genutzt werden, statt dem Client die Wahl zu lassen (sicherer)

    root /var/www/html;  # WordPress-Dateien (kommt vom Volume)  # Legt das Wurzelverzeichnis für die Webinhalte fest, hier liegen die WordPress-Dateien, die über ein Volume gemountet werden

    index index.php index.html;  # Bestimmt die Standard-Dateien, die geladen werden, wenn nur ein Verzeichnis aufgerufen wird (zuerst index.php, dann index.html)

    location / {  # Definiert, wie NGINX auf Anfragen an die Root-URL (/) reagieren soll
        try_files $uri $uri/ =404;  # Prüft, ob eine angeforderte Datei oder ein Verzeichnis existiert, wenn nicht, gibt es einen 404-Fehler zurück
    }

    # Anfragen mit .php -> an PHP-FPM weiterleiten
    location ~ \.php$ {  # Dieser Block gilt für alle Anfragen, die auf .php enden (z. B. index.php oder wp-login.php)
        include fastcgi_params;  # Lädt die Standard-Parameter für FastCGI (ein Protokoll, über das NGINX mit PHP-FPM kommuniziert)
        fastcgi_pass wordpress:9000;   # Leitet die Anfrage an den Container mit dem Namen "wordpress" weiter, Port 9000 (Standardport für php-fpm)
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;  # Übergibt den vollständigen Pfad zur PHP-Datei an PHP-FPM, damit sie korrekt ausgeführt werden kann
    }
}  # Schließt den Server-Block



server {  # Öffnet einen neuen "Server-Block", dieser ist für Anfragen zuständig, die über HTTP (Port 80) reinkommen
    listen 80;  # Sagt NGINX, dass dieser Block auf Port 80 (Standardport für unverschlüsseltes HTTP) lauscht
    server_name login.42.fr;  # Definiert den Domain-Namen, für den dieser Serverblock gilt (hier: login.42.fr), damit er nur auf deine Domain reagiert
    return 301 https://$host$request_uri;  # Erzwingt eine permanente Umleitung (HTTP Statuscode 301) zur HTTPS-Version derselben URL;
                                           # $host = der angefragte Hostname (z. B. login.42.fr), 
                                           # $request_uri = der gesamte Pfad und Query-String der ursprünglichen Anfrage,
                                           # dadurch wird aus http://login.42.fr/foo automatisch https://login.42.fr/foo
}  # Schließt den Server-Block

